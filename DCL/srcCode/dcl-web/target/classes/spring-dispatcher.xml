<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="cn.ffcs.dcl" />
    <mvc:interceptors>
        <bean class="cn.ffcs.filter.SystemInterceptor" />
    </mvc:interceptors>
	
	<!-- annotation方法修饰器 -->
<!--	<bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
<!--		<property name="messageConverters">-->
<!--			<list>-->
<!--				<ref bean="byteArray_hmc" />-->
<!--				<ref bean="string_hmc" />-->
<!--				<ref bean="resource_hmc" />-->
<!--				<ref bean="source_hmc" />-->
<!--				&lt;!&ndash;<ref bean="xmlAwareForm_hmc" /&ndash;&gt;-->
<!--				<ref bean="jaxb2RootElement_hmc" />-->
<!--				<ref bean="jackson_hmc" />-->
<!--			</list>-->
<!--		</property>-->
<!--		<property name="webBindingInitializer">-->
<!--			<bean class="cn.ffcs.common.utils.CustomWebBinding" />-->
<!--		</property>-->
<!--	</bean>-->
	<bean id="handlerAdapter" class="cn.ffcs.shequ.web.xss.v2.XssAnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="byteArray_hmc" />
				<ref bean="string_hmc" />
				<ref bean="resource_hmc" />
				<ref bean="source_hmc" />
				<!--<ref bean="xmlAwareForm_hmc" />-->
				<ref bean="jaxb2RootElement_hmc" />
				<ref bean="jackson_hmc" />
			</list>
		</property>
		<property name="webBindingInitializer">
			<bean class="cn.ffcs.common.utils.CustomWebBinding" />
		</property>
		<property name="iXssEncode" ref="customXssEncode"></property>
	</bean>
	<bean id="customXssEncode" class="cn.ffcs.shequ.web.xss.v2.DefaultXssEncode" />
	
	<bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" /><!-- 处理.. -->
	<bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" /><!-- 处理.. -->
	<bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" /><!-- 处理.. -->
	<!--<bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" /--><!-- 处理.. -->
	<bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /><!-- 处理.. -->
	<bean id="jackson_hmc" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" /><!-- 处理json-->

	<!-- annotation默认的方法映射适配器 -->
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="viewNames">
			<list>
				<value>*.jsp</value>
			</list>
		</property>
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="order" value="1"></property>
	</bean>


	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<bean id="stringFilter" class="cn.ffcs.common.directive.StringFilterDirective" />
	<!-- freeMarker的模板配置 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/WEB-INF/template/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="string_filter" value-ref="stringFilter" />
				<!-- 按钮权限控制 -->
				<entry key="actionCheck">
					<bean class="cn.ffcs.sysManage.ActionDirective" />
				</entry>
				<entry key="actionCheck2">
					<bean class="cn.ffcs.sysManage.ActionDirectiveSchool" />
				</entry>
			</map>
		</property>
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
	</bean>



	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="viewNames">
			<list>
				<value>*.ftl</value>
				<value>*.html</value>
			</list>
		</property>
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value="" />
		<property name="order" value="0" />
		<property name="requestContextAttribute" value="rc" />
	</bean>


	<!-- 让springmvc支持文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxInMemorySize" value="2048"></property>
		<property name="maxUploadSize" value="1000000000" />
		<property name="uploadTempDir" value="tmpDir"></property>
	</bean>
	
	<bean class="cn.ffcs.common.web.ShequWebExceptionResolver"  />
    <!--数据脱敏-->
    <bean id = "dataIntercept" class= "cn.ffcs.components.dataMasking.security.DataIntercept" />
    <aop:config>
        <aop:aspect ref= "dataIntercept">
            <aop:pointcut id = "cutData"
                          expression= "execution(* cn.ffcs..controller.*Controller.*(..))" />
            <aop:around method="doIntercept" pointcut-ref="cutData"/>
        </aop:aspect >
    </aop:config >
</beans>